name: Build and Push Image

on:
  push:
    branches: ["main"]
    paths:
      - src/**
      - protos/**
      - Cargo.toml
      - Cargo.lock
      - Dockerfile
      - build.rs
      - .github/workflows/build.yml
  workflow_dispatch:

env:
  DOCKER_TAG: ghcr.io/carrotnibbles/llr-sync:latest

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl

      - uses: Swatinem/rust-cache@v2

      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-

      - uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}

      - run: |
          cargo sqlx -V || cargo install sqlx-cli --no-default-features --features postgres
          cross -V || cargo install cross --git https://github.com/cross-rs/cross

      - run: |
          echo "DATABASE_URL=\"${{ secrets.DATABASE_URL }}\"" > .env
          cargo sqlx prepare
          rm .env
          cross build --release --target x86_64-unknown-linux-musl

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ env.DOCKER_TAG }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
